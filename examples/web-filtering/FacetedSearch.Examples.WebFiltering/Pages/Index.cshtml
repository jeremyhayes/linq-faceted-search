@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container">
    <div class="row">
        <div class="col-3">

            <h4 class="visually-hidden">Filters</h4>
            <ul class="list-group">
                @if (Model.AppliedFilters.Any())
                {
                    <li class="list-group-item">
                        <h5>Applied</h5>
                        <ul class="list-group list-group-flush">
                            @foreach (var filter in Model.AppliedFilters)
                            {
                                @foreach (var value in filter.Values)
                                {
                                    var routeData = Request.Query.ToDictionary(x => x.Key, x => string.Join(",", x.Value));
                                    routeData[filter.Qualifier] = null;

                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <span>@filter.Name: @value.Name</span>
                                            <a asp-all-route-data="routeData" title="remove">X</a>
                                        </div>
                                    </li>
                                }
                            }
                        </ul>
                    </li>
                }
                @foreach (var facet in Model.Facets)
                {
                    <li class="list-group-item">
                        <h5>@facet.Name</h5>
                        <ul class="list-group list-group-flush">
                            @foreach (var value in facet.Values)
                            {
                                // TODO Request.Query is an almost-IDictionary of string->StringValues
                                // However when we go to render it, there can only be one value.
                                var routeData = Request.Query.ToDictionary(x => x.Key, x => string.Join(",", x.Value));
                                routeData[facet.Qualifier] = value.Value;

                                <li class="list-group-item">
                                    <a asp-all-route-data="routeData">@value.Name</a>
                                </li>
                            }
                        </ul>
                    </li>
                }
            </ul>

        </div>
        <div class="col">

            <div class="row row-cols-1 g-4">
                @foreach (var item in Model.Spells)
                {
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title">@item.Name</h4>
                                <div class="row">
                                    <div class="col-4">
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item">Level: @(item.Level == 0 ? "Cantrip": $"Level {item.Level}")</li> 
                                            <li class="list-group-item">School: @item.School.Name</li>
                                            <li class="list-group-item">Ritual: @(item.Ritual ? "Yes" : "No")</li>
                                            <li class="list-group-item">Casting Time: @item.CastingTime</li>
                                            <li class="list-group-item">Range: @item.Range</li>
                                            @* <li class="list-group-item">Components: @item.Components</li> *@
                                            <li class="list-group-item">Duration: @item.Duration</li>
                                            <li class="list-group-item">Class: @(string.Join(", ", @item.ClassList.Select(x => x.Name)))</li>
                                        </ul>
                                    </div>
                                    <div class="col">
                                        <p class="card-text">@item.Description</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

        </div>
    </div>
</div>
